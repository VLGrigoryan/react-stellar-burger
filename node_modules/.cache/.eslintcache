[{"/Users/apple/Documents/GitHub/react-stellar-burger/src/index.js":"1","/Users/apple/Documents/GitHub/react-stellar-burger/src/reportWebVitals.ts":"2","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/App.jsx":"3","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/AppHeader/AppHeader.jsx":"4","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/app.jsx":"5","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/app/App.jsx":"6","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/app/app.jsx":"7","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/BurgerIngredients/BurgerIngredients.jsx":"8","/Users/apple/Documents/GitHub/react-stellar-burger/src/utils/data.js":"9","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/BurgerConstructor/BurgerConstructor.jsx":"10","/Users/apple/Documents/GitHub/react-stellar-burger/src/utils/prop-types.js":"11","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/Card/Card.jsx":"12"},{"size":515,"mtime":1687128438037,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1687121278762,"results":"15","hashOfConfig":"14"},{"size":2392,"mtime":1687562796210,"results":"16","hashOfConfig":"14"},{"size":1805,"mtime":1687133375055,"results":"17","hashOfConfig":"14"},{"size":474,"mtime":1687134734586,"results":"18","hashOfConfig":"14"},{"size":474,"mtime":1687134734586,"results":"19","hashOfConfig":"14"},{"size":474,"mtime":1687134734586,"results":"20","hashOfConfig":"14"},{"size":2269,"mtime":1687565213209,"results":"21","hashOfConfig":"14"},{"size":7113,"mtime":1687434763625,"results":"22","hashOfConfig":"14"},{"size":3201,"mtime":1687564961427,"results":"23","hashOfConfig":"14"},{"size":164,"mtime":1687121278763,"results":"24","hashOfConfig":"14"},{"size":1482,"mtime":1687564818328,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1db22ir",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/apple/Documents/GitHub/react-stellar-burger/src/index.js",[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/reportWebVitals.ts",[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/App.jsx",[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/AppHeader/AppHeader.jsx",["66","67","68"],[],"import React from \"react\";\nimport {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport HeaderStyle from \"./AppHeader.module.css\";\n\nconst AppHeader = () => {\n  return (\n    <header className={HeaderStyle.header + \" pt-4 pb-4\"}>\n      <nav className={HeaderStyle.nav}>\n        <ul className={HeaderStyle.list} style={{ marginRight: 112 }}>\n          <li className={HeaderStyle.item + \" pt-4 pb-4 pr-5 pl-5 mr-2\"}>\n            <BurgerIcon type=\"primary\" />\n            <a\n              href=\"#\"\n              className={\n                HeaderStyle.none +\n                \" text text_color_primary text_type_main-default ml-2\"\n              }\n            >\n              Конструктор\n            </a>\n          </li>\n          <li className={HeaderStyle.item + \" pt-4 pb-4 pr-5 pl-5\"}>\n            <ListIcon type=\"secondary\" />\n            <a\n              href=\"#\"\n              className={\n                HeaderStyle.none +\n                \" text text_color_inactive text_type_main-default ml-2\"\n              }\n            >\n              Лента заказов\n            </a>\n          </li>\n        </ul>\n        <div className={HeaderStyle.logo}>\n          <Logo />\n        </div>\n        <ul className={HeaderStyle.list} style={{ marginLeft: \"auto\" }}>\n          <li className={HeaderStyle.item + \" pt-4 pb-4 pr-5 pl-5\"}>\n            <ProfileIcon type=\"secondary\" />\n            <a\n              href=\"#\"\n              className={\n                HeaderStyle.none +\n                \" text text_color_inactive text_type_main-default ml-2\"\n              }\n            >\n              Личный кабинет\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/app.jsx",[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/app/App.jsx",[],[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/app/app.jsx",["69"],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/BurgerIngredients/BurgerIngredients.jsx",[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/utils/data.js",[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/BurgerConstructor/BurgerConstructor.jsx",["70","71"],[],"import React, { useState } from \"react\";\nimport { data } from \"../../utils/data\";\nimport {\n  ConstructorElement,\n  Button,\n  DragIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport currency from \"../../images/currency-icon.svg\";\nimport BCStyle from \"./BurgerConstructor.module.css\";\nimport Card from \"../Card/Card\";\n\nconst BurgerConstructor = ({\n  constructorItems,\n  onDeleteFromConstructor,\n  totalPrice,\n  selectedItems = [7, 2, 8, 11, 11, 1, 3, 4, 10, 12, 13],\n}) => {\n  const handleDeleteFromConstructor = (itemId, price, count) => {\n    const updatedItems = selectedItems.filter((item) => item !== itemId);\n    onDeleteFromConstructor(itemId, price, count, updatedItems);\n  };\n \n  return (\n    <section className={BCStyle.section + \" mt-25\"}>\n      <div className={`${BCStyle[\"section-container\"]} `}>\n        <div className={BCStyle.item + \" mb-4 ml-8\"}>\n          <ConstructorElement\n            type=\"top\"\n            isLocked={true}\n            text={data[0].name + \" (верх)\"}\n            price={data[0].price}\n            thumbnail={data[0].image}\n          />\n        </div>\n        <ul className={BCStyle.list}>\n          {selectedItems.map((itemId, index) => (\n            <li\n              className={BCStyle.item + \" mr-4\"}\n              key={`selected-${itemId}-${index}`}\n            >\n              <DragIcon />\n              <ConstructorElement\n                text={data[itemId].name}\n                price={data[itemId].price}\n                thumbnail={data[itemId].image}\n                handleClose={() =>\n                  handleDeleteFromConstructor(\n                    itemId,\n                    data[itemId].price,\n                    data[itemId].count\n                  )\n                }\n              />\n            </li>\n          ))}\n          {constructorItems.map((item) => (\n            <li\n              className={BCStyle.item + \" mr-4\"}\n              key={`constructor-${item.id}`}\n            >\n              <DragIcon />\n              <ConstructorElement\n                type={item.type}\n                isLocked={item.isLocked}\n                text={item.name}\n                price={item.price}\n                thumbnail={item.image}\n                handleClose={() =>\n                  handleDeleteFromConstructor(item.id, item.price, item.count)\n                }\n              />\n            </li>\n          ))}\n        </ul>\n        <div className={BCStyle.item + \" mt-4 ml-8\"}>\n          <ConstructorElement\n            type=\"bottom\"\n            isLocked={true}\n            text={data[0].name + \" (низ)\"}\n            price={data[0].price}\n            thumbnail={data[0].image}\n          />\n        </div>\n      </div>\n      <div className={`${BCStyle[\"section-footer\"]} + mt-10 mr-6`}>\n        <p\n          style={{\n            display: \"flex\",\n          }}\n          className=\"text text_type_digits-medium\"\n        >\n          {610 + totalPrice}\n          <img className=\"ml-2\" alt=\"валюта\" src={currency} />\n        </p>\n        <Button htmlType=\"submit\" type=\"primary\" size=\"large\">\n          Оформить заказ\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default BurgerConstructor;","/Users/apple/Documents/GitHub/react-stellar-burger/src/utils/prop-types.js",[],[],"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/Card/Card.jsx",["72"],[],"import React, { useState } from 'react';\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport CStyle from './Card.module.css';\n\nconst Card = (props) => {\n  const [count, setCount] = useState(props.count + 1 || 0); // Initialize count with props.count + 1\n\n  const handleItemClick = () => {\n    const updatedCount = count + 1;\n    setCount(updatedCount);\n    if (props.onClick) {\n      props.onClick({ ...props, count: updatedCount });\n    }\n  };\n\n  const handleRemoveClick = () => {\n    if (count > 0) {\n      const updatedCount = count - 1;\n      setCount(updatedCount);\n      if (props.onClick) {\n        props.onClick({ ...props, count: updatedCount });\n      }\n    }\n  };\n\n  // Generate a unique key for each card\n  const cardKey = `${props._id}-${props.count || 0}`;\n\n  return (\n    <li className={CStyle.card} key={cardKey}>\n      <div\n        className={`${CStyle['card-container']} pl-4 pr-4`}\n        onClick={handleItemClick}\n      >\n        <img src={props.image} alt={props.name} />\n        {count > 0 && <Counter count={count} size=\"default\" />}\n      </div>\n      <div style={{ display: 'flex' }} className=\"mt-1 mb-1\">\n        <p className=\"text text_type_digits-default mr-2\">{props.price}</p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n      <p style={{ minHeight: '48px', textAlign: 'center' }} className=\"text text_type_main-default\">\n        {props.name}\n      </p>\n    </li>\n  );\n};\n\nexport default Card;\n",{"ruleId":"73","severity":1,"message":"74","line":17,"column":13,"nodeType":"75","endLine":23,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":29,"column":13,"nodeType":"75","endLine":35,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":46,"column":13,"nodeType":"75","endLine":52,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"76","line":10,"column":6},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"81","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":12},{"ruleId":"77","severity":1,"message":"82","line":16,"column":9,"nodeType":"79","messageId":"80","endLine":16,"endColumn":26},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>? (10:6)","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'handleRemoveClick' is assigned a value but never used."]