{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport AppStyle from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [constructorItems, setConstructorItems] = useState([]);\n  const addToConstructor = product => {\n    const existingProduct = constructorItems.find(item => item.id === product.id);\n    if (existingProduct) {\n      const updatedItems = constructorItems.map(item => {\n        if (item.id === product.id) {\n          return {\n            ...item,\n            count: item.count + 1\n          };\n        }\n        return item;\n      });\n      setConstructorItems(updatedItems);\n    } else {\n      setConstructorItems(prevItems => [...prevItems, {\n        ...product,\n        id: Date.now(),\n        count: 1\n      }]);\n    }\n  };\n  const deleteFromConstructor = productId => {\n    setConstructorItems(prevItems => prevItems.map(item => {\n      if (item.id === productId) {\n        if (item.count > 1) {\n          return {\n            ...item,\n            count: item.count - 1\n          };\n        }\n        // If count is 1, remove the item from the constructor\n        return null;\n      }\n      return item;\n    }).filter(Boolean) // Filter out null items\n    );\n  };\n\n  const calculateTotalWeight = () => {\n    let totalWeight = 0;\n    constructorItems.forEach(item => {\n      totalWeight += item.weight * item.count;\n    });\n    return totalWeight;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: AppStyle.content,\n      children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        onAddToConstructor: addToConstructor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        constructorItems: constructorItems,\n        onDeleteFromConstructor: deleteFromConstructor,\n        totalWeight: calculateTotalWeight() // Pass totalWeight as prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"XGn6CY57BRkjNFCILl/LqQuuVKA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AppHeader","BurgerConstructor","BurgerIngredients","AppStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","constructorItems","setConstructorItems","addToConstructor","product","existingProduct","find","item","id","updatedItems","map","count","prevItems","Date","now","deleteFromConstructor","productId","filter","Boolean","calculateTotalWeight","totalWeight","forEach","weight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","content","onAddToConstructor","onDeleteFromConstructor","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport AppStyle from './App.module.css';\n\nconst App = () => {\n  const [constructorItems, setConstructorItems] = useState([]);\n\n  const addToConstructor = (product) => {\n    const existingProduct = constructorItems.find(item => item.id === product.id);\n\n    if (existingProduct) {\n      const updatedItems = constructorItems.map(item => {\n        if (item.id === product.id) {\n          return { ...item, count: item.count + 1 };\n        }\n        return item;\n      });\n      setConstructorItems(updatedItems);\n    } else {\n      setConstructorItems(prevItems => [...prevItems, { ...product, id: Date.now(), count: 1 }]);\n    }\n  };\n\n  const deleteFromConstructor = (productId) => {\n    setConstructorItems(prevItems =>\n      prevItems.map(item => {\n        if (item.id === productId) {\n          if (item.count > 1) {\n            return { ...item, count: item.count - 1 };\n          }\n          // If count is 1, remove the item from the constructor\n          return null;\n        }\n        return item;\n      }).filter(Boolean) // Filter out null items\n    );\n  };\n\n  const calculateTotalWeight = () => {\n    let totalWeight = 0;\n\n    constructorItems.forEach(item => {\n      totalWeight += item.weight * item.count;\n    });\n\n    return totalWeight;\n  };\n\n  return (\n    <>\n      <AppHeader />\n      <main className={AppStyle.content}>\n        <BurgerIngredients onAddToConstructor={addToConstructor} />\n        <BurgerConstructor\n          constructorItems={constructorItems}\n          onDeleteFromConstructor={deleteFromConstructor}\n          totalWeight={calculateTotalWeight()} // Pass totalWeight as prop\n        />\n      </main>\n    </>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}