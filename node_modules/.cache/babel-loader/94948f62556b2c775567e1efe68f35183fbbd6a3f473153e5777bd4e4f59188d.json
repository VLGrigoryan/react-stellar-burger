{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport AppStyle from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [constructorItems, setConstructorItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const addToConstructor = product => {\n    const existingProduct = constructorItems.find(item => item.id === product.id);\n    if (existingProduct) {\n      const updatedItems = constructorItems.map(item => {\n        if (item.id === product.id) {\n          return {\n            ...item,\n            count: item.count + 1\n          };\n        }\n        return item;\n      });\n      setConstructorItems(updatedItems);\n    } else {\n      setConstructorItems(prevItems => [...prevItems, {\n        ...product,\n        count: 1\n      }]);\n    }\n    setTotalPrice(prevPrice => prevPrice + product.price);\n  };\n  const removeFromConstructor = product => {\n    const existingProduct = constructorItems.find(item => item.id === product.id);\n    if (existingProduct && existingProduct.count > 1) {\n      const updatedItems = constructorItems.map(item => {\n        if (item.id === product.id) {\n          return {\n            ...item,\n            count: item.count - 1\n          };\n        }\n        return item;\n      });\n      setConstructorItems(updatedItems);\n    } else {\n      setConstructorItems(prevItems => prevItems.filter(item => item.id !== product.id));\n    }\n    setTotalPrice(prevPrice => prevPrice - product.price);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: AppStyle.app,\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: AppStyle.main,\n      children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        onAddToConstructor: addToConstructor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        constructorItems: constructorItems,\n        totalPrice: totalPrice,\n        onRemoveFromConstructor: removeFromConstructor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gFXEGkfP/jPfsyiB4Snu2vvoBX8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AppHeader","BurgerConstructor","BurgerIngredients","AppStyle","jsxDEV","_jsxDEV","App","_s","constructorItems","setConstructorItems","totalPrice","setTotalPrice","addToConstructor","product","existingProduct","find","item","id","updatedItems","map","count","prevItems","prevPrice","price","removeFromConstructor","filter","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","main","onAddToConstructor","onRemoveFromConstructor","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/GitHub/react-stellar-burger/src/components/App/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport AppStyle from './App.module.css';\n\nconst App = () => {\n  const [constructorItems, setConstructorItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  const addToConstructor = (product) => {\n    const existingProduct = constructorItems.find(item => item.id === product.id);\n\n    if (existingProduct) {\n      const updatedItems = constructorItems.map(item => {\n        if (item.id === product.id) {\n          return { ...item, count: item.count + 1 };\n        }\n        return item;\n      });\n      setConstructorItems(updatedItems);\n    } else {\n      setConstructorItems(prevItems => [...prevItems, { ...product, count: 1 }]);\n    }\n\n    setTotalPrice(prevPrice => prevPrice + product.price);\n  };\n\n  const removeFromConstructor = (product) => {\n    const existingProduct = constructorItems.find(item => item.id === product.id);\n\n    if (existingProduct && existingProduct.count > 1) {\n      const updatedItems = constructorItems.map(item => {\n        if (item.id === product.id) {\n          return { ...item, count: item.count - 1 };\n        }\n        return item;\n      });\n      setConstructorItems(updatedItems);\n    } else {\n      setConstructorItems(prevItems => prevItems.filter(item => item.id !== product.id));\n    }\n\n    setTotalPrice(prevPrice => prevPrice - product.price);\n  };\n\n  return (\n    <div className={AppStyle.app}>\n      <AppHeader />\n      <main className={AppStyle.main}>\n        <BurgerIngredients onAddToConstructor={addToConstructor} />\n        <BurgerConstructor\n          constructorItems={constructorItems}\n          totalPrice={totalPrice}\n          onRemoveFromConstructor={removeFromConstructor}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}